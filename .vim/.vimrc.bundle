"
" Bundle
"
" Note: Skip initialization for vim-tiny or vim-small.
if !1 | finish | endif

if has('vim_starting')
  set runtimepath+=~/.vim/bundle/neobundle.vim/
endif

call neobundle#begin(expand('~/.vim/bundle/'))

NeoBundleFetch 'Shougo/neobundle.vim'
NeoBundle 'Shougo/vimproc.vim', {
\ 'build' : {
\     'windows' : 'tools\\update-dll-mingw',
\     'cygwin' : 'make -f make_cygwin.mak',
\     'mac' : 'make -f make_mac.mak',
\     'linux' : 'make',
\     'unix' : 'gmake',
\    },
\ }
"
" coding
"
NeoBundle 'Lokaltog/vim-easymotion'
"コメントアウト
NeoBundle 'tomtom/tcomment_vim'
"fを連打可能に
NeoBundle 'rhysd/clever-f.vim'
"undoをツリー形式で表示
NeoBundle "sjl/gundo.vim"
"インデント
NeoBundle 'Yggdroot/indentLine'
"VisualModeの機能向上
NeoBundle 'kana/vim-niceblock'
"補完・スニペット
NeoBundle 'Shougo/neocomplete'
NeoBundle 'Shougo/neosnippet'
NeoBundle 'honza/vim-snippets'
"M-!で切り替え
NeoBundle 'AndrewRadev/switch.vim'
"括弧自動補完
NeoBundle "kana/vim-smartinput"
NeoBundle "cohama/vim-smartinput-endwise"
"コード整形
NeoBundle 'Align'
"text-object
NeoBundle 'kana/vim-textobj-user'
NeoBundle 'kana/vim-textobj-line' " l
NeoBundle 'kana/vim-textobj-entire' " e
NeoBundle "kana/vim-textobj-function"
NeoBundle 'thinca/vim-textobj-between.git' " f{char}
NeoBundle 'camelcasemotion' ",w ,e ,b
NeoBundle "thinca/vim-textobj-comment" " ac, ic
NeoBundle 'rhysd/vim-textobj-word-column' " v
NeoBundle "rhysd/vim-textobj-ruby" " arr, brr
NeoBundle 'tpope/vim-surround'
NeoBundle 'terryma/vim-expand-region'
"git
NeoBundle 'tpope/vim-fugitive'
NeoBundle 'mattn/webapi-vim'
NeoBundle 'mattn/gist-vim'
NeoBundle 'mattn/unite-gist'
NeoBundle 'kmnk/vim-unite-giti.git'
NeoBundle 'idanarye/vim-merginal'
NeoBundle 'cohama/agit.vim'
"
" file
"
"Unite.vim
NeoBundleLazy "Shougo/unite.vim", {
\   'autoload' : {
\       'commands' : [ "Unite" ]
\   }
\}
NeoBundle 'Shougo/unite-ssh'
NeoBundle 'Shougo/neomru.vim'
NeoBundle 'tsukkee/unite-tag'
NeoBundle 'tsukkee/unite-help'
NeoBundle "osyo-manga/unite-filetype"
NeoBundle 'osyo-manga/unite-quickrun_config'
NeoBundle 'koron/codic-vim'
NeoBundle 'rhysd/unite-codic.vim'
NeoBundle 'LeafCage/yankround.vim'
NeoBundle 'liquidz/vimfiler-sendto'
"Filer
NeoBundleLazy 'Shougo/vimfiler', {'autoload' : {'function_prefix' : 'vimfiler', 'commands' : ['VimFiler']}}
"自動でカレントディレクトリを操作
NeoBundle 'airblade/vim-rooter'
"検索置換
NeoBundle 'rking/ag.vim'
NeoBundle 'thinca/vim-qfreplace'

"
" programming
"
"vim内実行
NeoBundleLazy 'thinca/vim-quickrun', {'autoload' : {'commands' : ["QuickRun"] }}
NeoBundleLazy 'ujihisa/shadow.vim', {'depends' : ["thinca/vim-quickrun"] }
NeoBundleLazy "osyo-manga/shabadou.vim", {'depends' : ["thinca/vim-quickrun"] }
"自動エラーチェック
NeoBundle 'scrooloose/syntastic'

"
" utilities
"
"Shell
NeoBundleLazy 'Shougo/vimshell.vim', {'autoload' : {'commands' : ["VimShell"] }}
" clipboard
NeoBundle 'git://github.com/kana/vim-fakeclip.git'
" tmux
NeoBundle 'christoomey/vim-tmux-navigator'
NeoBundle 'tell-k/vim-browsereload-mac'
" dash
NeoBundle 'rizzatti/funcoo.vim'
NeoBundle 'rizzatti/dash.vim'
"ブラウザで開く
NeoBundle 'tyru/open-browser.vim'
"サブモード
NeoBundle 'kana/vim-submode'
" link tmux
NeoBundle 't9md/vim-choosewin'
" taglist
NeoBundle 'taglist.vim'
"
NeoBundle 'itchyny/lightline.vim'

"
" language
"
"ruby
NeoBundleLazy 'vim-ruby/vim-ruby', {"autoload": {"filetypes": ["ruby"]}}
NeoBundleLazy 'todesking/ruby_hl_lvar.vim', {"autoload": {"filetypes": ["ruby"]}}
NeoBundleLazy 'tpope/vim-rails', {"autoload": {"filetypes": ["ruby"]}}
NeoBundleLazy 'ruby-matchit', {"autoload": {"filetypes": ["ruby"]}}
NeoBundleLazy 'ujihisa/unite-rake', {"autoload": {"filetypes": ["ruby"]}}
NeoBundleLazy 'tpope/vim-rails', {"autoload": {"filetypes": ["ruby"]}}
NeoBundleLazy 'basyura/unite-rails', {"autoload": {"filetypes": ["ruby"]}}

"python
NeoBundleLazy 'davidhalter/jedi-vim', {"autoload": {"filetypes": ["python"]}}

"js
NeoBundleLazy 'leshill/vim-json.git', {"autoload": {"filetypes": ["json"]}}
NeoBundleLazy 'kchmck/vim-coffee-script', {"autoload": {"filetypes": ["coffee"]}}
NeoBundleLazy 'jsx/jsx.vim.git', {"autoload": {"filetypes": ["jsx"]}}

"web
NeoBundleLazy 'cakebaker/scss-syntax.vim',{"autoload": {"filetypes": ["scss", "sass"]}}
NeoBundleLazy 'mattn/emmet-vim',{"autoload": {"filetypes": ["html", "php", "erb"]}}
NeoBundleLazy 'nono/jquery.vim', {"autoload": {"filetypes": ["jquery"]}}
NeoBundleLazy 'slim-template/vim-slim', {"autoload": {"filetypes": ["slim"]}}
NeoBundle 'lilydjwg/colorizer'

"Haskell
NeoBundleLazy 'dag/vim2hs', {"autoload": {"filetypes": ["haskell"]}}
NeoBundleLazy 'eagletmt/ghcmod-vim', {"autoload": {"filetypes": ["haskell"]}}
NeoBundleLazy 'pbrisbin/html-template-syntax', {"autoload": {"filetypes": ["haskell"]}}
NeoBundleLazy 'ujihisa/neco-ghc', {"autoload": {"filetypes": ["haskell"]}}
NeoBundleLazy 'kana/vim-filetype-haskell', {"autoload": {"filetypes": ["haskell"]}}
NeoBundleLazy 'ujihisa/ref-hoogle', {"autoload": {"filetypes": ["haskell"]}}
NeoBundleLazy 'ujihisa/unite-haskellimport', {"autoload": {"filetypes": ["haskell"]}}
" Rust
NeoBundleLazy 'wting/rust.vim', {"autoload": {"filetypes": ["rust"]}}

"markdown
NeoBundleLazy 'tpope/vim-markdown', {"autoload": {"filetypes": ["markdown"]}}

"php
NeoBundleLazy 'StanAngeloff/php.vim', {"autoload": {"filetypes": ["php"]}}
NeoBundleLazy 'beyondwords/vim-twig', {"autoload": {"filetypes": ["twig"]}}
NeoBundleLazy 'violetyk/cake.vim', {"autoload": {"filetypes": ["php"]}}

"Go
NeoBundleLazy 'vim-jp/vim-go-extra', {"autoload": {"filetypes": ["go"]}}
NeoBundleLazy 'dgryski/vim-godef', {"autoload": {"filetypes": ["go"]}}

"color
NeoBundle 'altercation/vim-colors-solarized'
NeoBundle 'tomasr/molokai'
NeoBundle 'ujihisa/unite-colorscheme'

call neobundle#end()

filetype plugin indent on

NeoBundleCheck
