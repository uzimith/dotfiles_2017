" カーソル {{{
let &t_ti.="\e[1 q"
let &t_SI.="\e[5 q"
let &t_EI.="\e[1 q"
let &t_te.="\e[0 q"
" }}}
" Loader {{{
let mapleader = ","
let maplocalleader = "'"
" }}}
" insert mode でjjでesc {{{
inoremap jj <Esc>
" }}}
" 移動設定 Move {{{
" カーソルを表示行で移動する。論理行移動は<C-n>,<C-p>
noremap h <Left>
noremap j gj
noremap k gk
noremap l <Right>
noremap <Down> gj
noremap <Up>   gk
noremap <Space>h  ^
noremap <Space>l  $

"move window
nnoremap <C-H> <C-W>h
nnoremap <C-J> <C-W>j
nnoremap <C-K> <C-W>k
nnoremap <C-L> <C-W>l

noremap <C-W>h <C-W>H
noremap <C-W>j <C-W>J
noremap <C-W>k <C-W>K
noremap <C-W>l <C-W>L

nnoremap Y y$
" insert mode での移動
inoremap  <C-e> <END>
inoremap  <C-a> <HOME>

inoremap <C-n> <Down>
inoremap <C-p> <Up>
inoremap <C-b> <Left>
inoremap <C-f> <Right>
inoremap <silent> <C-d> <C-g>u<Del>

"<space>j, <space>kで画面送り
noremap J <C-f>
noremap <Space>j J
noremap K <C-b>
noremap <Space>k <Space>k

" 最後に編集された位置に移動
nnoremap gb '[
nnoremap gp ']

" 前回終了したカーソル行に移動
autocmd BufReadPost * if line("'\"") > 0 && line("'\"") <= line("$") | exe "normal g`\"" | endif
" }}}
" lcd {{{
function! LcdCurrentBuffer()
  let f = expand("$:p:h")
  execute ":lcd" . expand("%:p:h")
endfunction
noremap <Leader>lcd :call LcdCurrentBuffer()<CR>
" }}}
" F4でバッファを削除する {{{
map <F4> <ESC>:bnext \| bdelete #<CR>
command! Bw :bnext \| bdelete #
" }}}
"フレームサイズを怠惰に変更する {{{
map <kPlus> <C-W>+
map <kMinus> <C-W>-
"}}}
" 矩形選択で自由に移動する {{{
set virtualedit+=block
" }}}
"ビジュアルモード時vで行末まで選択 {{{
vnoremap v $h
"}}}
" タブ {{{
noremap tc :tabnew<CR>
set showtabline=2 " 常にタブラインを表示
" }}}
" 検索 {{{
"カーソル位置の単語を単語単位の検索文字列に設定
nnoremap <silent> *  :<C-u>call MySetSearch('""yiw', 'word')<CR>:let &hlsearch=&hlsearch<CR>
"カーソル位置の単語を非単語単位の検索文字列に設定
nnoremap <silent> g* :<C-u>call MySetSearch('""yiw')<CR>:let &hlsearch=&hlsearch<CR>
"カーソル位置から単語の末尾までを検索文字列に設定
nnoremap <silent> #  :<C-u>call MySetSearch('""ye')<CR>:let &hlsearch=&hlsearch<CR>

"文字列選択中なら選択文字列を検索レジスタに設定。
vnoremap <silent> * :<C-u>call MySetSearch('""vgvy')<CR>:let &hlsearch=&hlsearch<CR>
vnoremap <silent> # :<C-u>call MySetSearch('""vgvy')<CR>:let &hlsearch=&hlsearch<CR>


" very magic
nnoremap v/ /\v
nnoremap / /

"検索ワードをセットする。
"何か追加パラメータが設定されていたら、単語単位検索に。
function! MySetSearch(cmd, ...)
  let saved_reg = @"
  if a:cmd != ''
    silent exec 'normal! '.a:cmd
  endif
  let pattern = escape(@", '\\/.*$^~[]')
  let pattern = substitute(pattern, '\n$', '', '')
  if a:0 > 0
    let pattern = '\<'.pattern.'\>'
  endif
  let @/ = pattern
  let @" = saved_reg
endfunction
" }}}
" Todo {{{
command! Todo edit ~/dev/.todo.md
" }}}

" vim: foldmethod=marker
